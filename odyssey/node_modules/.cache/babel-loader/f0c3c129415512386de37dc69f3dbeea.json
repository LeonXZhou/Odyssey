{"ast":null,"code":"export function formatTripData(allTripData) {\n  const formatedTripData = {};\n  const formatedTripDataArray = [];\n\n  for (const dataPoint of allTripData) {\n    if (!formatedTripData[dataPoint.trip_id]) {\n      formatedTripData[dataPoint.trip_id] = {};\n    }\n\n    if (!formatedTripData[dataPoint.trip_id][\"title\"]) {\n      formatedTripData[dataPoint.trip_id][\"title\"] = dataPoint.trips_name;\n    }\n\n    if (!formatedTripData[dataPoint.trip_id][\"description\"]) {\n      formatedTripData[dataPoint.trip_id][\"description\"] = dataPoint.description;\n    }\n\n    if (!formatedTripData[dataPoint.trip_id][\"markers\"]) {\n      formatedTripData[dataPoint.trip_id][\"markers\"] = [];\n    }\n\n    formatedTripData[dataPoint.trip_id][\"markers\"].push({\n      type: dataPoint.stop_types,\n      lat: dataPoint.stops_lat,\n      long: dataPoint.stops_long\n    });\n\n    if (!formatedTripData[dataPoint.trip_id][\"maps\"]) {\n      formatedTripData[dataPoint.trip_id][\"maps\"] = {\n        lat: dataPoint.routes_lat,\n        long: dataPoint.routes_long\n      };\n    }\n\n    if (!formatedTripData[dataPoint.trip_id][\"users\"]) {\n      formatedTripData[dataPoint.trip_id][\"users\"] = {\n        firstName: dataPoint.first_name,\n        LastName: dataPoint.last_name\n      };\n    }\n  }\n\n  for (const data in formatedTripData) {\n    formatedTripData[data][\"trip_id\"] = data;\n    formatedTripDataArray.push(formatedTripData[data]);\n  }\n\n  return formatedTripDataArray;\n}","map":{"version":3,"sources":["/Users/scott/Desktop/lighthouse/final-project/odyssey/src/Helpers/dataHelpers.js"],"names":["formatTripData","allTripData","formatedTripData","formatedTripDataArray","dataPoint","trip_id","trips_name","description","push","type","stop_types","lat","stops_lat","long","stops_long","routes_lat","routes_long","firstName","first_name","LastName","last_name","data"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,qBAAqB,GAAG,EAA9B;;AACA,OAAK,MAAMC,SAAX,IAAwBH,WAAxB,EAAqC;AACnC,QAAI,CAACC,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAArB,EAA0C;AACxCH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,GAAsC,EAAtC;AACD;;AAED,QAAI,CAACH,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,OAApC,CAAL,EAAmD;AACjDH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,OAApC,IAA+CD,SAAS,CAACE,UAAzD;AACD;;AACD,QAAI,CAACJ,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,aAApC,CAAL,EAAyD;AACvDH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,aAApC,IAAqDD,SAAS,CAACG,WAA/D;AACD;;AACD,QAAI,CAACL,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,SAApC,CAAL,EAAqD;AACnDH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,SAApC,IAAiD,EAAjD;AACD;;AACDH,IAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,SAApC,EAA+CG,IAA/C,CAAoD;AAClDC,MAAAA,IAAI,EAAEL,SAAS,CAACM,UADkC;AAElDC,MAAAA,GAAG,EAAEP,SAAS,CAACQ,SAFmC;AAGlDC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAHkC,KAApD;;AAKA,QAAI,CAACZ,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,MAApC,CAAL,EAAkD;AAChDH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,MAApC,IAA8C;AAC5CM,QAAAA,GAAG,EAAEP,SAAS,CAACW,UAD6B;AAE5CF,QAAAA,IAAI,EAAET,SAAS,CAACY;AAF4B,OAA9C;AAID;;AACD,QAAI,CAACd,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,OAApC,CAAL,EAAmD;AACjDH,MAAAA,gBAAgB,CAACE,SAAS,CAACC,OAAX,CAAhB,CAAoC,OAApC,IAA+C;AAC7CY,QAAAA,SAAS,EAAEb,SAAS,CAACc,UADwB;AAE7CC,QAAAA,QAAQ,EAAEf,SAAS,CAACgB;AAFyB,OAA/C;AAID;AACF;;AACD,OAAK,MAAMC,IAAX,IAAmBnB,gBAAnB,EACA;AACEA,IAAAA,gBAAgB,CAACmB,IAAD,CAAhB,CAAuB,SAAvB,IAAoCA,IAApC;AACAlB,IAAAA,qBAAqB,CAACK,IAAtB,CAA2BN,gBAAgB,CAACmB,IAAD,CAA3C;AACD;;AACD,SAAOlB,qBAAP;AACD","sourcesContent":["export function formatTripData(allTripData) {\n  const formatedTripData = {};\n  const formatedTripDataArray = [];\n  for (const dataPoint of allTripData) {\n    if (!formatedTripData[dataPoint.trip_id]) {\n      formatedTripData[dataPoint.trip_id] = {};\n    }\n  \n    if (!formatedTripData[dataPoint.trip_id][\"title\"]) {\n      formatedTripData[dataPoint.trip_id][\"title\"] = dataPoint.trips_name;\n    }\n    if (!formatedTripData[dataPoint.trip_id][\"description\"]) {\n      formatedTripData[dataPoint.trip_id][\"description\"] = dataPoint.description;\n    }\n    if (!formatedTripData[dataPoint.trip_id][\"markers\"]) {\n      formatedTripData[dataPoint.trip_id][\"markers\"] = [];\n    }\n    formatedTripData[dataPoint.trip_id][\"markers\"].push({\n      type: dataPoint.stop_types,\n      lat: dataPoint.stops_lat,\n      long: dataPoint.stops_long,\n    });\n    if (!formatedTripData[dataPoint.trip_id][\"maps\"]) {\n      formatedTripData[dataPoint.trip_id][\"maps\"] = {\n        lat: dataPoint.routes_lat,\n        long: dataPoint.routes_long,\n      };\n    }\n    if (!formatedTripData[dataPoint.trip_id][\"users\"]) {\n      formatedTripData[dataPoint.trip_id][\"users\"] = {\n        firstName: dataPoint.first_name,\n        LastName: dataPoint.last_name,\n      };\n    }\n  }\n  for (const data in formatedTripData)\n  {\n    formatedTripData[data][\"trip_id\"] = data;\n    formatedTripDataArray.push(formatedTripData[data])\n  }\n  return formatedTripDataArray\n}\n\n"]},"metadata":{},"sourceType":"module"}