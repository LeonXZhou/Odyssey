{"ast":null,"code":"var _jsxFileName = \"/Users/luiscontreras/lighthouselabs/Odyssey/odyssey/src/Helpers/markerHelpers.js\";\n//maps icon string to icon url\nimport { Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function iconFinder(iconString) {\n  switch (iconString) {\n    case \"DEFAULT\":\n      return \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\";\n\n    case \"TENT\":\n      return \"https://www.pngfind.com/pngs/m/80-807696_png-file-svg-camping-tent-svg-transparent-png.png\";\n\n    default:\n      return \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\";\n  }\n}\nexport function generateMarkers(markers) {\n  const markersJSX = markers.map((marker, i) => {\n    //setting default options for markers\n    const markerWidth = marker.iconSize ? marker.iconSize[0] : 20;\n    const markerHeight = marker.iconSize ? marker.iconSize[1] : 20;\n    const icon = marker.icon ? marker.icon : \"DEFAULT\";\n    const markerPosition = marker.position ? marker.position : [0, 0]; // const iconAnchor = [markerWidth/2, markerHeight];\n\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: markerPosition,\n      icon: new L.Icon({\n        iconUrl: iconFinder(icon),\n        iconSize: new L.Point(markerWidth, markerHeight),\n        className: \"leaflet-div-icon\" // iconAnchor: iconAnchor\n\n      }),\n      children: marker.popUp ? /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: marker.popUp.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: marker.popUp.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  return markersJSX;\n}","map":{"version":3,"sources":["/Users/luiscontreras/lighthouselabs/Odyssey/odyssey/src/Helpers/markerHelpers.js"],"names":["Marker","Popup","L","iconFinder","iconString","generateMarkers","markers","markersJSX","map","marker","i","markerWidth","iconSize","markerHeight","icon","markerPosition","position","Icon","iconUrl","Point","className","popUp","name","description"],"mappings":";AAAA;AACA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,OAAOC,CAAP,MAAc,SAAd;;;AAEA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgC;AACrC,UAAQA,UAAR;AACE,SAAK,SAAL;AACE,aAAO,kFAAP;;AAEF,SAAK,MAAL;AACE,aAAO,4FAAP;;AAEF;AACE,aAAO,kFAAP;AARJ;AAUD;AAED,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,QAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AAC5C;AACA,UAAMC,WAAW,GAAGF,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACG,QAAP,CAAgB,CAAhB,CAAlB,GAAuC,EAA3D;AACA,UAAMC,YAAY,GAAGJ,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACG,QAAP,CAAgB,CAAhB,CAAlB,GAAuC,EAA5D;AACA,UAAME,IAAI,GAAGL,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACK,IAArB,GAA4B,SAAzC;AACA,UAAMC,cAAc,GAAGN,MAAM,CAACO,QAAP,GAAkBP,MAAM,CAACO,QAAzB,GAAoC,CAAC,CAAD,EAAI,CAAJ,CAA3D,CAL4C,CAM5C;;AAEA,wBACE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAED,cADZ;AAEE,MAAA,IAAI,EACF,IAAIb,CAAC,CAACe,IAAN,CAAW;AACTC,QAAAA,OAAO,EAAEf,UAAU,CAACW,IAAD,CADV;AAETF,QAAAA,QAAQ,EAAE,IAAIV,CAAC,CAACiB,KAAN,CAAYR,WAAZ,EAAyBE,YAAzB,CAFD;AAGTO,QAAAA,SAAS,EAAE,kBAHF,CAIT;;AAJS,OAAX,CAHJ;AAAA,gBAmBGX,MAAM,CAACY,KAAP,gBACC,QAAC,KAAD;AAAA,gCACE;AAAA,oBAAKZ,MAAM,CAACY,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIb,MAAM,CAACY,KAAP,CAAaE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC;AAzBJ,OAUOb,CAVP;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD,GAtCkB,CAAnB;AAuCA,SAAOH,UAAP;AACD","sourcesContent":["//maps icon string to icon url\nimport { Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nexport function iconFinder(iconString) {\n  switch (iconString) {\n    case \"DEFAULT\":\n      return \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\";\n\n    case \"TENT\":\n      return \"https://www.pngfind.com/pngs/m/80-807696_png-file-svg-camping-tent-svg-transparent-png.png\";\n\n    default:\n      return \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\";\n  }\n}\n\nexport function generateMarkers(markers) {\n  const markersJSX = markers.map((marker, i) => {\n    //setting default options for markers\n    const markerWidth = marker.iconSize ? marker.iconSize[0] : 20;\n    const markerHeight = marker.iconSize ? marker.iconSize[1] : 20;\n    const icon = marker.icon ? marker.icon : \"DEFAULT\";\n    const markerPosition = marker.position ? marker.position : [0, 0];\n    // const iconAnchor = [markerWidth/2, markerHeight];\n\n    return (\n      <Marker\n        position={markerPosition}\n        icon={\n          new L.Icon({\n            iconUrl: iconFinder(icon),\n            iconSize: new L.Point(markerWidth, markerHeight),\n            className: \"leaflet-div-icon\",\n            // iconAnchor: iconAnchor\n          })\n        }\n        key={i}\n\n        // we can pass an eventHandler prop to marker to attach listeners to it\n        // eventHandlers={{\n        //   click: (e) => {\n        //     console.log('marker clicked', e);\n        //   },\n        // }}\n      >\n        {marker.popUp ? (\n          <Popup>\n            <h1>{marker.popUp.name}</h1>\n            <p>{marker.popUp.description}</p>\n          </Popup>\n        ) : (\n          <></>\n        )}\n      </Marker>\n    );\n  });\n  return markersJSX;\n}\n"]},"metadata":{},"sourceType":"module"}