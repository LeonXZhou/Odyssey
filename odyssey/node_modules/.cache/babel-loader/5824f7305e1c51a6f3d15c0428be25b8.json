{"ast":null,"code":"//maps themeAttribution string\nexport function themeAttributionFinder(themeString) {\n  switch (themeString) {\n    case \"TOPO\":\n      return 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)';\n\n    default:\n      return '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n  }\n} //maps themeURL String\n\nexport function themeURLFinder(themeString) {\n  switch (themeString) {\n    case \"TOPO\":\n      return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\n\n    default:\n      return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n  }\n} // paseDBinput {lat: number, long number}\n\nexport function parseDBMap(tripMaps) {\n  return {\n    center: [tripMaps.lat, tripMaps.long]\n  };\n} // parseDBMap options\n// mapOptions={\n//   zoom: 10, OPTIONAL\n//   center: [49.246292, -123.116226], NEEDED\n//   themeAttribution: \"TOPO\", OPTIONAL\n//   themeURL: \"TOPO\", OPTIONAL\n//   //route_id: we can pass in the id from the db later\n// }\n// parseDBinput [{type:\"string\",lat: number, long number}]\n\nexport function parseDBMarkers(tripMarkers) {\n  return tripMarkers.map(serverMarker => {\n    return {\n      position: [serverMarker.lat, serverMarker.long],\n      icon: serverMarker.type\n    };\n  });\n} // parseDBoutput\n// markers=[\n//   { position: [49.246292, -123.116226], iconSize: [40, 40] },\n//   {\n//     position: [49.286292, -123.136226],\n//     icon: \"TENT\",\n//     iconSize: [20, 20],\n//   }, //icon string is converted to actual url like the theme strings\n//   {\n//     position: [49.346292, -123.166226],\n//     icon: \"TENT\",\n//     iconSize: [20, 20],\n//     popUp: { name: \"First Night\", description: \"I <3 Camping\" },\n//   },\n// }","map":{"version":3,"sources":["/Users/scott/Desktop/lighthouse/final-project/odyssey/src/Helpers/mapHelper.js"],"names":["themeAttributionFinder","themeString","themeURLFinder","parseDBMap","tripMaps","center","lat","long","parseDBMarkers","tripMarkers","map","serverMarker","position","icon","type"],"mappings":"AAAA;AACA,OAAO,SAASA,sBAAT,CAAgCC,WAAhC,EAA6C;AAClD,UAAQA,WAAR;AACE,SAAK,MAAL;AACE,aAAO,qSAAP;;AACF;AACE,aAAO,yFAAP;AAJJ;AAMD,C,CAED;;AACA,OAAO,SAASC,cAAT,CAAwBD,WAAxB,EAAqC;AAC1C,UAAQA,WAAR;AACE,SAAK,MAAL;AACE,aAAO,kDAAP;;AACF;AACE,aAAO,oDAAP;AAJJ;AAOD,C,CAED;;AACA,OAAO,SAASE,UAAT,CAAoBC,QAApB,EAA8B;AACnC,SAAO;AAAEC,IAAAA,MAAM,EAAE,CAACD,QAAQ,CAACE,GAAV,EAAeF,QAAQ,CAACG,IAAxB;AAAV,GAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,OAAO,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,SAAOA,WAAW,CAACC,GAAZ,CAAiBC,YAAD,IAAkB;AAAE,WAAO;AAAEC,MAAAA,QAAQ,EAAE,CAACD,YAAY,CAACL,GAAd,EAAmBK,YAAY,CAACJ,IAAhC,CAAZ;AAAmDM,MAAAA,IAAI,EAAEF,YAAY,CAACG;AAAtE,KAAP;AAAqF,GAAzH,CAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//maps themeAttribution string\nexport function themeAttributionFinder(themeString) {\n  switch (themeString) {\n    case \"TOPO\":\n      return 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n    default:\n      return '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }\n}\n\n//maps themeURL String\nexport function themeURLFinder(themeString) {\n  switch (themeString) {\n    case \"TOPO\":\n      return 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'\n    default:\n      return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\n  }\n}\n\n// paseDBinput {lat: number, long number}\nexport function parseDBMap(tripMaps) {\n  return { center: [tripMaps.lat, tripMaps.long] }\n}\n// parseDBMap options\n// mapOptions={\n//   zoom: 10, OPTIONAL\n//   center: [49.246292, -123.116226], NEEDED\n//   themeAttribution: \"TOPO\", OPTIONAL\n//   themeURL: \"TOPO\", OPTIONAL\n//   //route_id: we can pass in the id from the db later\n// }\n\n\n// parseDBinput [{type:\"string\",lat: number, long number}]\nexport function parseDBMarkers(tripMarkers) {\n  return tripMarkers.map((serverMarker) => { return { position: [serverMarker.lat, serverMarker.long], icon: serverMarker.type } })\n}\n// parseDBoutput\n// markers=[\n//   { position: [49.246292, -123.116226], iconSize: [40, 40] },\n//   {\n//     position: [49.286292, -123.136226],\n//     icon: \"TENT\",\n//     iconSize: [20, 20],\n//   }, //icon string is converted to actual url like the theme strings\n//   {\n//     position: [49.346292, -123.166226],\n//     icon: \"TENT\",\n//     iconSize: [20, 20],\n//     popUp: { name: \"First Night\", description: \"I <3 Camping\" },\n//   },\n// }\n"]},"metadata":{},"sourceType":"module"}