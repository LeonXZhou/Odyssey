{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/lighthouse/final-project/odyssey/src/components/MapComponents/MapDisplay.js\";\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { generateMarkers } from '../../Helpers/markerHelpers';\nimport { themeAttributionFinder, themeURLFinder } from '../../Helpers/mapHelper';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MapDisplay(props) {\n  let markers = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (props.markers) {\n    markers = generateMarkers(props.markers);\n  }\n\n  if (!props.mapOptions.zoom) {\n    props.mapOptions.zoom = 8;\n  } //Defaulting Map Theme\n\n\n  const mapThemeAttribution = props.mapOptions && themeAttributionFinder(props.mapOptions.themeAttribution);\n  const mapThemeURL = props.mapOptions && themeURLFinder(props.mapOptions.themeAttribution);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: props.mapOptions.center,\n    zoom: props.mapOptions.zoom,\n    scrollWheelZoom: false,\n    doubleClickZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: mapThemeAttribution,\n      url: mapThemeURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), markers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MapDisplay;\nexport default MapDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDisplay\");","map":{"version":3,"sources":["/Users/scott/Desktop/lighthouse/final-project/odyssey/src/components/MapComponents/MapDisplay.js"],"names":["MapContainer","TileLayer","generateMarkers","themeAttributionFinder","themeURLFinder","MapDisplay","props","markers","mapOptions","zoom","mapThemeAttribution","themeAttribution","mapThemeURL","center"],"mappings":";AAAA,OAAO,0BAAP;AACA,SAASA,YAAT,EAAuBC,SAAvB,QAAuC,eAAvC;AAEA,SAASC,eAAT,QAA+B,6BAA/B;AACA,SAASC,sBAAT,EAAiCC,cAAjC,QAAuD,yBAAvD;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,OAAO,gBAAG,qCAAd;;AAEA,MAAID,KAAK,CAACC,OAAV,EAAkB;AAChBA,IAAAA,OAAO,GAAGL,eAAe,CAACI,KAAK,CAACC,OAAP,CAAzB;AACD;;AAED,MAAI,CAACD,KAAK,CAACE,UAAN,CAAiBC,IAAtB,EACA;AACEH,IAAAA,KAAK,CAACE,UAAN,CAAiBC,IAAjB,GAAwB,CAAxB;AACD,GAVwB,CAazB;;;AACA,QAAMC,mBAAmB,GAAGJ,KAAK,CAACE,UAAN,IAAoBL,sBAAsB,CAACG,KAAK,CAACE,UAAN,CAAiBG,gBAAlB,CAAtE;AACA,QAAMC,WAAW,GAAGN,KAAK,CAACE,UAAN,IAAoBJ,cAAc,CAACE,KAAK,CAACE,UAAN,CAAiBG,gBAAlB,CAAtD;AAEA,sBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEL,KAAK,CAACE,UAAN,CAAiBK,MAAvC;AAA+C,IAAA,IAAI,EAAEP,KAAK,CAACE,UAAN,CAAiBC,IAAtE;AAA4E,IAAA,eAAe,EAAE,KAA7F;AAAoG,IAAA,eAAe,EAAE,KAArH;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAGC,mBADhB;AAEE,MAAA,GAAG,EAAGE;AAFR;AAAA;AAAA;AAAA;AAAA,YADF,EAMGL,OANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KA5BQF,U;AA8BT,eAAeA,UAAf","sourcesContent":["import 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer} from 'react-leaflet'\n\nimport { generateMarkers} from '../../Helpers/markerHelpers';\nimport { themeAttributionFinder, themeURLFinder } from '../../Helpers/mapHelper';\n\nfunction MapDisplay(props) {\n  let markers = <></>;\n\n  if (props.markers){\n    markers = generateMarkers(props.markers)\n  }\n\n  if (!props.mapOptions.zoom)\n  {\n    props.mapOptions.zoom = 8;\n  }\n\n\n  //Defaulting Map Theme\n  const mapThemeAttribution = props.mapOptions && themeAttributionFinder(props.mapOptions.themeAttribution )\n  const mapThemeURL = props.mapOptions && themeURLFinder(props.mapOptions.themeAttribution )\n  \n  return (\n    <MapContainer center={props.mapOptions.center} zoom={props.mapOptions.zoom} scrollWheelZoom={false} doubleClickZoom={false}>\n      <TileLayer\n        attribution= {mapThemeAttribution}\n        url= {mapThemeURL}\n      />\n\n      {markers}\n\n    </MapContainer>\n  )\n}\n\nexport default MapDisplay;"]},"metadata":{},"sourceType":"module"}